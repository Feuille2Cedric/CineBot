
import discord
from discord.ext import commands
from helper_functions.quiz_repo import QuizRepo

class QuizCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.repo = QuizRepo(bot.db, bot.cfg.QUIZ_START_DATE)

    @commands.command(name="q")
    async def random_question(self, ctx: commands.Context):
        if ctx.channel.id != self.bot.cfg.COMMANDS_CHANNEL_ID:
            await ctx.send("Cette commande n'est autoris√©e que dans le salon de commandes.")
            return
        row = await self.repo.get_random_question()
        if not row:
            await ctx.send("Aucune question disponible.")
            return
        msg = await ctx.send(f"**Question :** {row['question']}\n||{row['answer']}||")
        for emoji in ('‚úÖ','‚ùå','üöÆ'):
            await msg.add_reaction(emoji)

    @commands.command(name="annonce_nouveautes")
    async def annonce(self, ctx: commands.Context):
        if ctx.channel.id != self.bot.cfg.UPDATE_CHANNEL_ID:
            await ctx.send("Cette commande ne peut √™tre utilis√©e que dans le fil d√©di√©.")
            return
        quiz_role_mention = quiz_role_mention = f"<@&{self.bot.cfg.QUIZ_ROLE_ID}>"

        embed = discord.Embed(
            title="üì¢ Mise √† jour du Bot Quiz Cin√©ma",
            description="De nouvelles fonctionnalit√©s viennent d‚Äôarriver pour am√©liorer votre exp√©rience ! üé¨üçø",
            color=0x1ABC9C
        )
        embed.add_field(name="üìÖ 10 questions le dimanche",
                        value="Le quiz quotidien propose 10 questions le dimanche, pour pimenter la fin de semaine !",
                        inline=False)
        embed.add_field(name="‚ôªÔ∏è Pas de r√©p√©tition de questions",
                        value="Les questions d√©j√† pos√©es ne reviendront pas avant d‚Äôavoir √©puis√© tout le stock.",
                        inline=False)
        embed.add_field(name="üìä Commande `!sr alltime` & `!sr all time`",
                        value="Affiche le classement global de tous les temps. `!sr` reste le classement hebdomadaire.",
                        inline=False)
        embed.add_field(name="üöÆ Suppression de questions par vote",
                        value=("Un nouvel emoji üöÆ a √©t√© ajout√© sur chaque question.\n"
                               "Apr√®s 5 votes utilisateurs, la question est supprim√©e de la base."),
                        inline=False)
        embed.add_field(
            name="üìå Rappel des commandes cl√©s",
            value=("`!q` - Question al√©atoire\n"
                   "`!sp` - Tes statistiques\n"
                   "`!sr` - Classement hebdo\n"
                   "`!sr alltime` ou `!sr all time` - Classement global\n"
                   "`!propose question | r√©ponse` - Propose ta question"),
            inline=False
        )
        embed.set_footer(text="Amusez-vous bien et merci pour votre participation !")

        await ctx.send(quiz_role_mention)
        await ctx.send(embed=embed)

    @commands.command(name="aide")
    async def aide(self, ctx: commands.Context):
        embed = discord.Embed(title="Aide du bot Quiz Cin√©ma", color=discord.Color.green())
        embed.add_field(name="!q", value="Affiche une question cin√©ma al√©atoire.", inline=False)
        embed.add_field(name="!sp", value="Affiche ton profil et tes statistiques.", inline=False)
        embed.add_field(name="!sr", value="Affiche le classement hebdomadaire.", inline=False)
        embed.add_field(name="!propose question | r√©ponse",
                        value="Propose une nouvelle question (ou utilise le format Q: ... R: ... ou Q : ... R : ...).",
                        inline=False)
        embed.add_field(name="Quiz quotidien",
                        value="R√©agis avec l‚Äôemoji correspondant √† ton score sous le message du quiz pour enregistrer tes points.",
                        inline=False)
        await ctx.send(embed=embed)
